class Solution {
    public int numTilePossibilities(String tiles) {
        int[] cnt = new int[26];
        int[] fac = new int[tiles.length() + 1];
        fac[0] = 1;
        for (int i = 1; i < fac.length; i++) {
            fac[i] = i * fac[i - 1];
        }
        for (int i = 0; i < tiles.length(); i++) {
            cnt[tiles.charAt(i) - 'A']++;
        }
        int[] lenCnt = new int[tiles.length() + 1];
        lenCnt[0] = 1;
        for (int i = 0; i < cnt.length; i++) {
            if (cnt[i] != 0) {
                int[] temp = new int[tiles.length() + 1];
                for (int j = 0; j < lenCnt.length && lenCnt[j] > 0; j++) {
                    for (int k = 1; k <= cnt[i]; k++) {
                        int totalLen = j + k;
                        temp[totalLen] += lenCnt[j] * fac[totalLen] / (fac[k] * fac[j]);
                    }
                }
                for (int j = 0; j < temp.length; j++) {
                    lenCnt[j] += temp[j];
                }
            }
        }
        int res = 0;
        for (int i = 1; i < lenCnt.length; i++) {
            res += lenCnt[i];
        }
        return res;
    }
}
